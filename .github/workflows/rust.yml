name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: pw

permissions:
  contents: write

jobs:
  test:
    name: Build debug
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --verbose

  build-and-release:
    name: Build for ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        include:
          # x86_64 builds
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
            target: x86_64-unknown-linux-gnu
            asset_name: pw-linux-x86_64
            asset_extension: ''
          - os: windows-latest
            platform: windows
            arch: x86_64
            target: x86_64-pc-windows-msvc
            asset_name: pw-windows-x86_64
            asset_extension: '.exe'
          - os: macos-latest
            platform: macos
            arch: x86_64
            target: x86_64-apple-darwin
            asset_name: pw-macos-x86_64
            asset_extension: ''
          
          # arm64 builds
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            target: aarch64-unknown-linux-gnu
            asset_name: pw-linux-arm64
            asset_extension: ''
          - os: macos-latest
            platform: macos
            arch: arm64
            target: aarch64-apple-darwin
            asset_name: pw-macos-arm64
            asset_extension: ''
          - os: windows-latest
            platform: windows
            arch: arm64
            target: aarch64-pc-windows-msvc
            asset_name: pw-windows-arm64
            asset_extension: '.exe'

    steps:
      - uses: actions/checkout@v4
    
      - name: Set up QEMU
        if: matrix.platform == 'linux' && matrix.arch == 'arm64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install arm64 dependencies
        if: matrix.platform == 'linux' && matrix.arch == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Build Release Binary
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }} --verbose
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
          MACOSX_DEPLOYMENT_TARGET: '11.0'

      - name: Copy binary for Linux/macOS
        if: matrix.platform != 'windows'
        run: |
          cp target/${{ matrix.target }}/release/${{ env.BINARY_NAME }} ${{ matrix.asset_name }}

      - name: Copy binary for Windows
        if: matrix.platform == 'windows'
        run: |
          Copy-Item -Path "target\${{ matrix.target }}\release\${{ env.BINARY_NAME }}.exe" -Destination "${{ matrix.asset_name }}${{ matrix.asset_extension }}"

      - name: Create/Update Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            ${{ matrix.asset_name }}${{ matrix.asset_extension }}